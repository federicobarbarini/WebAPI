@inject NavigationManager Navigation
@code {

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var returnUrl = Navigation.ToBaseRelativePath(Navigation.Uri).ToReal();
        if (returnUrl.ToLowerInvariant() == "logout") returnUrl = string.Empty;

        var authenticationState = await AuthenticationStateTask;
        if (authenticationState?.User?.Identity is null || !authenticationState.User.Identity.IsAuthenticated)
        {
            if (returnUrl == string.Empty)
                Navigation.NavigateTo("login", forceLoad: true);
            else
                Navigation.NavigateTo($"login?returnUrl={returnUrl}", forceLoad: true);
        }
    }
}